// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'dart:developer';

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

const String dev = 'dev';
const String prod = 'prod';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    const String currentEnv = String.fromEnvironment('RG_ENV');
    if (kIsWeb) {
      if (currentEnv == prod) {
        log('Using webProd FirebaseOptions');
        return webProd;
      }
      if (currentEnv == dev || currentEnv == '') {
        log('Using webDev FirebaseOptions');
        return webDev;
      }
      throw UnsupportedError(
        'Ivalid RG_ENV value: $currentEnv'
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions webProd = FirebaseOptions(
    apiKey: 'AIzaSyCDHWlyCRGIF5C1XV31Gc5Vmf0Q6VH0_oI',
    appId: '1:263247193363:web:c53743c084f310284c66e6',
    messagingSenderId: '263247193363',
    projectId: 'resolve-games',
    authDomain: 'resolve-games.firebaseapp.com',
    databaseURL: 'https://resolve-games-default-rtdb.europe-west1.firebasedatabase.app',
    storageBucket: 'resolve-games.appspot.com',
    measurementId: 'G-6HXHS4E5D8',
  );

  static const FirebaseOptions webDev = FirebaseOptions(
    apiKey: 'AIzaSyACa1wStf0sw0wYbEgfSrcUSU1zSHEbpfQ',
    appId: '1:1042061751258:web:080fd5abcd61471d82c6e3',
    messagingSenderId: '1042061751258',
    projectId: 'resolve-games-dev',
    authDomain: 'resolve-games-dev.firebaseapp.com',
    databaseURL: 'https://resolve-games-dev-default-rtdb.europe-west1.firebasedatabase.app',
    storageBucket: 'resolve-games-dev.appspot.com',
    measurementId: 'G-9V0BPLH1Z1',
  );
}
